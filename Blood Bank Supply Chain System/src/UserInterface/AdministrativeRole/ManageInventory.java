/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdministrativeRole;

import Business.Hospital.BloodDetails;
import Business.Hospital.Hospital;
import Business.Network;
import Business.Organization.Organization;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

import com.lowagie.text.Document;
import com.lowagie.text.PageSize;
import com.lowagie.text.pdf.PdfContentByte;
import com.lowagie.text.pdf.PdfWriter;
import java.awt.Graphics2D;
import java.awt.Shape;
import java.io.FileOutputStream;
import javax.swing.JOptionPane;

/**
 *
 * @author yashr
 */
public class ManageInventory extends javax.swing.JPanel {

    /**
     * Creates new form ManageInventory
     */
    private JPanel userProcessContainer;
    private Network network;
    private Hospital hospital;
    private Organization organization;
    public ManageInventory(JPanel userProcessContainer, Network network, Organization organization, Hospital hospital) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.network=network;
        this.hospital = hospital;
        this.organization = organization;
        displayInventory();
        displayComboBox();
    }

    public void displayInventory()
    {
        DefaultTableModel defaultTableModel = (DefaultTableModel) bloodDetailsTable.getModel();
        defaultTableModel.setRowCount(0);
        for(BloodDetails bloodDetails : hospital.getInventory().getBloodDetailsDirectory().getBloodDetailsDirectory())
        {
            Object row[] = new Object[defaultTableModel.getColumnCount()];
            row[0] = bloodDetails;
            row[1] = bloodDetails.getBloodGroup();
            row[2] = bloodDetails.getExpiryDate();
            row[3] = bloodDetails.getCollectionDate();
            row[4] = bloodDetails.getDonorName();
            row[5] = bloodDetails.getDonorSocialSecurityNumber();
            defaultTableModel.addRow(row);
        }
    }
    
    public void displayComboBox()
    {
        bloodGroupComboBox.removeAllItems();
        bloodGroupComboBox.addItem("O+ve");
        bloodGroupComboBox.addItem("O-ve");
        bloodGroupComboBox.addItem("A+ve");
        bloodGroupComboBox.addItem("A-ve");
        bloodGroupComboBox.addItem("B+ve");
        bloodGroupComboBox.addItem("B-ve");
        bloodGroupComboBox.addItem("AB+ve");
        bloodGroupComboBox.addItem("AB-ve");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        bloodDetailsTable = new javax.swing.JTable();
        backButton = new javax.swing.JButton();
        viewStockButton = new javax.swing.JButton();
        bloodGroupComboBox = new javax.swing.JComboBox();
        applyFilterButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        exportToPdf = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bloodDetailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Blood Bag ID", "Blood Group", "Expiry Date", "Donation Date", "Donor Name", "Donor SSN"
            }
        ));
        jScrollPane1.setViewportView(bloodDetailsTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 1069, 277));

        backButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16/Knob-Fast-Rewind-icon.png"))); // NOI18N
        backButton.setText("Back ");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 451, -1, -1));

        viewStockButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        viewStockButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16/Knob-Forward-icon.png"))); // NOI18N
        viewStockButton.setText("View Stock");
        viewStockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewStockButtonActionPerformed(evt);
            }
        });
        add(viewStockButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(732, 451, -1, -1));

        bloodGroupComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(bloodGroupComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(368, 84, 133, -1));

        applyFilterButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        applyFilterButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16/Knob-Valid-Blue-icon.png"))); // NOI18N
        applyFilterButton.setText("Apply Filter");
        applyFilterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyFilterButtonActionPerformed(evt);
            }
        });
        add(applyFilterButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(549, 82, -1, -1));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16/Knob-Search-icon.png"))); // NOI18N
        jButton1.setText("Search Blood in Hospital");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(409, 451, -1, -1));

        exportToPdf.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        exportToPdf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16/Knob-Upload-icon.png"))); // NOI18N
        exportToPdf.setText("Export to PDF");
        exportToPdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportToPdfActionPerformed(evt);
            }
        });
        add(exportToPdf, new org.netbeans.lib.awtextra.AbsoluteConstraints(436, 513, -1, -1));

        jLabel1.setFont(new java.awt.Font("Cambria", 3, 36)); // NOI18N
        jLabel1.setText("Manage Inventory");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 25, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Select Blood Group ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 82, -1, 25));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16/Knob-Cancel-icon.png"))); // NOI18N
        jButton2.setText("Remove Blood Bag");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 450, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/watermark_1.PNG"))); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1220, 600));
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.remove(this);
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void viewStockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewStockButtonActionPerformed
        // TODO add your handling code here:
        PieChartPanel pieChartPanel = new PieChartPanel(userProcessContainer, network, organization, hospital);
        userProcessContainer.add("pieChartPanel",pieChartPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_viewStockButtonActionPerformed

    private void applyFilterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyFilterButtonActionPerformed
        // TODO add your handling code here:
        String selectedBloodGroup = (String)bloodGroupComboBox.getSelectedItem();
        DefaultTableModel defaultTableModel = (DefaultTableModel) bloodDetailsTable.getModel();
        defaultTableModel.setRowCount(0);
        for(BloodDetails bloodDetails : hospital.getInventory().getBloodDetailsDirectory().getBloodDetailsDirectory())
        {
            if(bloodDetails.getBloodGroup().equals(selectedBloodGroup))
            {
            Object row[] = new Object[defaultTableModel.getColumnCount()];
            row[0] = bloodDetails;
            row[1] = bloodDetails.getBloodGroup();
            row[2] = bloodDetails.getExpiryDate();
            row[3] = bloodDetails.getCollectionDate();
            row[4] = bloodDetails.getDonorName();
            row[5] = bloodDetails.getDonorSocialSecurityNumber();
            defaultTableModel.addRow(row);
            }
        }
    }//GEN-LAST:event_applyFilterButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        SearchBloodFromHospitals searchBloodFromHospitals = new SearchBloodFromHospitals(userProcessContainer, network, organization, hospital);
        userProcessContainer.add("searchBloodFromHospitals",searchBloodFromHospitals);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void exportToPdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportToPdfActionPerformed
        // TODO add your handling code here:
        Document document = new Document(PageSize.A4.rotate());
    try {
      PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("jTable.pdf"));

      document.open();
      PdfContentByte cb = writer.getDirectContent();

      cb.saveState();
      Graphics2D g2 = cb.createGraphicsShapes(500, 500);

      Shape oldClip = g2.getClip();
      g2.clipRect(0, 0, 500, 500);

      bloodDetailsTable.print(g2);
      g2.setClip(oldClip);

      g2.dispose();
      cb.restoreState();
    } catch (Exception e) {
      System.err.println(e.getMessage());
    }
    document.close();
    }//GEN-LAST:event_exportToPdfActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int selectedRow = bloodDetailsTable.getSelectedRow();
        if(selectedRow >=0)
        {
            BloodDetails bloodDetails = (BloodDetails) bloodDetailsTable.getValueAt(selectedRow, 0);
            System.out.println("Bag Id "+bloodDetails);
            hospital.getInventory().getBloodDetailsDirectory().getBloodDetailsDirectory().remove(bloodDetails);
            JOptionPane.showMessageDialog(null, "Blood bag has been removed from inventory");
            displayInventory();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyFilterButton;
    private javax.swing.JButton backButton;
    private javax.swing.JTable bloodDetailsTable;
    private javax.swing.JComboBox bloodGroupComboBox;
    private javax.swing.JButton exportToPdf;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton viewStockButton;
    // End of variables declaration//GEN-END:variables
}
