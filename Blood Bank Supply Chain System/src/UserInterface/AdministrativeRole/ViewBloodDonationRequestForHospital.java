/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdministrativeRole;

import Business.Connection.HospitalConnection;
import Business.Hospital.BloodDetails;
import Business.Hospital.Hospital;
import Business.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author barua
 */
public class ViewBloodDonationRequestForHospital extends javax.swing.JPanel {

    /**
     * Creates new form ViewBloodDonationRequestForHospital
     */
    private JPanel userProcessContainer;
    private Network network;
    private Hospital hospital;
    private Organization organization;
    private UserAccount userAccount;

    public ViewBloodDonationRequestForHospital(JPanel userProcessContainer, Network network, Organization organization, Hospital hospital, UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.network = network;
        this.hospital = hospital;
        this.organization = organization;
        this.userAccount = userAccount;
        displayRequest();
    }

    public void displayRequest() {
        DefaultTableModel defaultTableModel = (DefaultTableModel) requestForBloodTable.getModel();
        defaultTableModel.setRowCount(0);
        for (HospitalConnection hospitalConnection : network.getHospitalConnectionDirectory().getHospitalsConnectionDirectory()) {
            if (hospitalConnection.getReceiverHospital().getHospitalemailId().equals(hospital.getHospitalemailId()) || hospitalConnection.getSenderHospital().getHospitalemailId().equals(hospital.getHospitalemailId())) {
                Object row[] = new Object[defaultTableModel.getColumnCount()];
                row[0] = hospitalConnection.getReceiverHospital().getHospitalName();
                row[1] = hospitalConnection.getReceiverHospital();
                row[2] = hospitalConnection.getSenderHospital().getHospitalName();
                row[3] = hospitalConnection.getReceiverHospital();
                row[4] = hospitalConnection.getBloodGroup();
                row[5] = hospitalConnection;
                if (hospitalConnection.getApprovedBy() == null) {
                    row[6] = "Request is not approved yet";
                } else {
                    row[6] = hospitalConnection.getApprovedBy();
                }
                defaultTableModel.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        requestForBloodTable = new javax.swing.JTable();
        approveRequestButton = new javax.swing.JButton();
        markRequestAsCompleteButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        requestForBloodTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Donor Hospital", "Donor Email ID", "Requester Email Id", "Requester Hospital", "Blood Group Required", "Connection Status", "Approved By"
            }
        ));
        jScrollPane1.setViewportView(requestForBloodTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 70, 859, 184));

        approveRequestButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        approveRequestButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16/Knob-Valid-Green-icon.png"))); // NOI18N
        approveRequestButton.setText("Approve Request ");
        approveRequestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveRequestButtonActionPerformed(evt);
            }
        });
        add(approveRequestButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(297, 311, -1, -1));

        markRequestAsCompleteButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        markRequestAsCompleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16/Knob-Stop-icon.png"))); // NOI18N
        markRequestAsCompleteButton.setText("Mark Request as Complete");
        markRequestAsCompleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                markRequestAsCompleteButtonActionPerformed(evt);
            }
        });
        add(markRequestAsCompleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(484, 311, -1, -1));

        backButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16/Knob-Fast-Rewind-icon.png"))); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(977, 37, -1, -1));

        jLabel3.setFont(new java.awt.Font("Cambria", 3, 36)); // NOI18N
        jLabel3.setText("View Blood Request ");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(326, 11, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/watermark_1.PNG"))); // NOI18N
        jLabel1.setText("jLabel1");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1250, 630));
    }// </editor-fold>//GEN-END:initComponents

    private void approveRequestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveRequestButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = requestForBloodTable.getSelectedRow();
        if (selectedRow >= 0) {
            HospitalConnection hospitalConnection = (HospitalConnection) requestForBloodTable.getValueAt(selectedRow, 5);
            if (hospitalConnection.getConnectionStatus().equals("Request Received")) {
                if (hospitalConnection.getReceiverHospital().getHospitalemailId().equals(hospital.getHospitalemailId())) {
                    hospitalConnection.setConnectionStatus("Approved By Donor");
                    hospitalConnection.setApprovedBy(userAccount);
                    JOptionPane.showMessageDialog(null, "Request has been approved by you");
                    displayRequest();
                } else {
                    JOptionPane.showMessageDialog(null, "You are not authorized to approve this request");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Request is already approved");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_approveRequestButtonActionPerformed

    private void markRequestAsCompleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_markRequestAsCompleteButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = requestForBloodTable.getSelectedRow();
        if (selectedRow >= 0) {
            HospitalConnection hospitalConnection = (HospitalConnection) requestForBloodTable.getValueAt(selectedRow, 5);
            if (hospitalConnection.getConnectionStatus().equals("Approved By Donor")) {
                if (hospitalConnection.getReceiverHospital().getHospitalemailId().equals(hospital.getHospitalemailId())) {
                    hospitalConnection.setConnectionStatus("Completed");
                    displayRequest();
                    hospitalConnection.setApprovedBy(userAccount);
                    BloodDetails requestedbloodDetails;
                    for (BloodDetails bloodDetails : hospitalConnection.getReceiverHospital().getInventory().getBloodDetailsDirectory().getBloodDetailsDirectory()) {
                        if (bloodDetails.getBloodGroup().equalsIgnoreCase(hospitalConnection.getBloodGroup())) {
                            hospitalConnection.getSenderHospital().getInventory().getBloodDetailsDirectory().getBloodDetailsDirectory().add(bloodDetails);
                            hospitalConnection.getReceiverHospital().getInventory().getBloodDetailsDirectory().getBloodDetailsDirectory().remove(bloodDetails);
                            JOptionPane.showMessageDialog(null, "Request has been marked as complete");
                            displayRequest();
                            break;
                        }
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "You are not authorized to complete this request");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please approve request before marking it as complete");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_markRequestAsCompleteButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.remove(this);
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveRequestButton;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton markRequestAsCompleteButton;
    private javax.swing.JTable requestForBloodTable;
    // End of variables declaration//GEN-END:variables
}
